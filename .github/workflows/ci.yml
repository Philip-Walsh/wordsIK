name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: "18"

jobs:
  # Secret scanning and security checks
  security:
    name: Security & Secrets Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run TruffleHog
        run: |
          docker run --rm -v "$(pwd):/repo" trufflesecurity/trufflehog:latest \
            --only-verified --fail /repo

  # Code quality and validation
  validation:
    name: Content Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Validate JSON files
        run: |
          echo "Checking JSON syntax..."
          find data/ -name "*.json" -exec sh -c 'echo "Validating $1"; python3 -m json.tool "$1" > /dev/null' _ {} \;

      - name: Run profanity check
        run: |
          echo "Running profanity checks..."
          for file in $(find data/ -name "*.json"); do
            echo "Checking $file"
            node validation/profanity-check.js "$file"
          done

      - name: Check for sensitive patterns
        run: |
          echo "Checking for sensitive patterns..."
          # Check for API keys, passwords, etc.
          if grep -r -i -E "(api_key|password|secret|token)" data/ --exclude-dir=node_modules; then
            echo "⚠️  Potential sensitive data found in content files"
            exit 1
          fi

  # Spell checking
  spellcheck:
    name: Multilingual Spell and Grammar Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - run: npm ci

      - name: Run CSpell (English)
        run: npx cspell "data/**/*.json" --languageId en

      - name: Run CSpell (Spanish)
        run: npx cspell "data/**/*.json" --languageId es

      - name: Run CSpell (French)
        run: npx cspell "data/**/*.json" --languageId fr

  # Vale linting for documentation
  vale:
    name: Vale Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vale
        run: |
          wget https://github.com/errata-ai/vale/releases/latest/download/vale_2.28.0_Linux_64-bit.tar.gz
          tar -xzf vale_2.28.0_Linux_64-bit.tar.gz
          sudo mv vale /usr/local/bin/

      - name: Create Vale config
        run: |
          cat > .vale.ini << EOF
          StylesPath = .vale/styles
          [*.md]
          BasedOnStyles = Microsoft, write-good, proselint
          EOF

      - name: Run Vale
        run: |
          echo "Running Vale linting..."
          vale docs/ *.md CONTRIBUTING.md

  # Multi-language content validation
  multilingual:
    name: Multi-Language Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Validate language structure
        run: |
          echo "Validating language directory structure..."
          # Check that all language directories have consistent structure
          for lang in en es fr; do
            if [ -d "data/vocabulary/$lang" ]; then
              echo "✓ Found vocabulary for $lang"
            fi
            if [ -d "data/grammar/$lang" ]; then
              echo "✓ Found grammar for $lang"
            fi
            if [ -d "data/spelling/$lang" ]; then
              echo "✓ Found spelling for $lang"
            fi
          done

      - name: Check UTF-8 encoding
        run: |
          echo "Checking file encoding..."
          find data/ -name "*.json" -exec file {} \; | grep -v "UTF-8" && exit 1 || echo "✓ All files are UTF-8 encoded"

      - name: Validate translations
        run: |
          echo "Validating translation consistency..."
          # Basic check for translation field presence
          for file in $(find data/ -name "*.json"); do
            if grep -q '"translation"' "$file"; then
              echo "✓ $file has translation field"
            fi
          done

  # Build and test
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: [validation, spellcheck, vale, multilingual]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run all validations
        run: |
          echo "Running comprehensive validation..."
          npm run validate

      - name: Check file structure
        run: |
          echo "Validating project structure..."
          # Ensure required directories exist
          [ -d "data" ] || exit 1
          [ -d "docs" ] || exit 1
          [ -d "validation" ] || exit 1
          echo "✓ Project structure is valid"

      - name: Generate validation report
        run: |
          echo "Generating validation report..."
          echo "## Validation Summary" > validation-report.md
          echo "- [x] JSON syntax validation" >> validation-report.md
          echo "- [x] Profanity filtering" >> validation-report.md
          echo "- [x] Spell checking" >> validation-report.md
          echo "- [x] Vale linting" >> validation-report.md
          echo "- [x] Multi-language validation" >> validation-report.md
          echo "- [x] Security scanning" >> validation-report.md

  # Final status check
  status:
    name: Status Check
    runs-on: ubuntu-latest
    needs: [security, validation, spellcheck, vale, multilingual, build]
    if: always()
    steps:
      - name: Check job status
        run: |
          echo "Checking overall pipeline status..."
          if [ "${{ needs.security.result }}" != "success" ] || \
             [ "${{ needs.validation.result }}" != "success" ] || \
             [ "${{ needs.spellcheck.result }}" != "success" ] || \
             [ "${{ needs.vale.result }}" != "success" ] || \
             [ "${{ needs.multilingual.result }}" != "success" ] || \
             [ "${{ needs.build.result }}" != "success" ]; then
            echo "❌ One or more checks failed"
            exit 1
          else
            echo "✅ All checks passed"
          fi

  grammarcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Start LanguageTool server
        run: docker run -d -p 8010:8010 --name languagetool languagetoolorg/languagetool:latest
      - name: Lint feedback for admin
        run: |
          echo "To check grammar, POST text to http://localhost:8010/v2/check for each language."
          echo "Example: curl --data 'language=en-US&text=This is a test.' http://localhost:8010/v2/check"
          echo "You can script this to check all your files in all languages."
